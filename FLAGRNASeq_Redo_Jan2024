#Transferred all necessary fastq files 

# Remember to activate your environment.

source activate rnaseq

# Unload system perl for compatability with entrez-direct. This step was not needed as perl was never loaded. 

module unload perl

# Assigning Variables.

ASSEMBLY='http://ftp.ensembl.org/pub/release-103/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz'

ANNOTATION='http://ftp.ensembl.org/pub/release-103/gtf/homo_sapiens/Homo_sapiens.GRCh38.103.gtf.gz'

################################
## Generate STAR Genome Index ##
################################

# Make a directory to store the genome files within your working directory.

mkdir -p genome

# Download and unpack the genome assembly.

curl $ASSEMBLY | gunzip > ./genome/assembly.fasta

# Download and unpack the genome annotation.

curl $ANNOTATION | gunzip > ./genome/annotation.gtf

# Create a directory to store the index.

mkdir -p genome/index

# Create the STAR genome index.
# --genomeSAindexNbases 12 was recommended by software.

STAR \
  --runThreadN 4 \
  --runMode genomeGenerate \
  --genomeDir genome/index \
  --genomeFastaFiles genome/assembly.fasta \
  --sjdbGTFfile genome/annotation.gtf \
  --genomeSAindexNbases 12


###########################
## Align Reads to Genome ##
###########################

# Create an output directory for aligned reads.

mkdir -p Results_FLAGRIP/aligned

# Align the reads.

FASTQ=$U373*

for FASTQ in ${FASTQ[@]}; do
  PREFIX=Results_FLAGRNASeq/aligned/$(basename $FASTQ .fastq)_
  STAR \
    --runThreadN 8 \
    --outFilterMultimapNmax 1 \
    --outFilterScoreMinOverLread .66 \
    --outFilterMismatchNmax 10 \
    --outFilterMismatchNoverLmax .3 \
    --runMode alignReads \
    --genomeDir /N/slate/primukh/RNASEq_Redo_Dec23/genome/index \
    --readFilesIn $FASTQ \
    --outFileNamePrefix $PREFIX \
    --outSAMattributes All \
    --outSAMtype BAM SortedByCoordinate
done

# Indexing the BAM files.

BAMS=($(find ./Results_FLAGRNASeq/aligned -name "*\.bam"))

for BAM in ${BAMS[@]}; do
  samtools index $BAM
  done

 ####################
## Count Features ##
####################

# Create an output directory for read counts.

mkdir -p Results_FLAGRIP/counts

# Count reads.

BAMS=$(find ./Results_FLAGRNASeq/aligned -name "*\.bam")

featureCounts \
  -a /N/slate/primukh/RNASEq_Redo_Dec23/genome/annotation.gtf \
  -o /N/slate/primukh/RNASEq_Redo_Dec23/FLAG_Input/Results_FLAGRNASeq/FLAGRNASeq_counts.tsv \
  -t gene \
  -g gene_id \
  --largestOverlap \
  --readExtension3 150 \
  --primary \
  -s 2 \
  -T 8 \
  ${BAMS}

#copy files to local desktop, perform on terminal
scp primukh@quartz.uits.iu.edu:/N/slate/primukh/RNASEq_Redo_Dec23/FLAG_Input/Results_FLAGRNASeq/Counts/FLAGRNASeq_counts.tsv .
scp primukh@quartz.uits.iu.edu:/N/slate/primukh/RNASEq_Redo_Dec23/FLAG_Input/Results_FLAGRNASeq/Counts/FLAGRNASeq_counts.tsv.summary .

########################################DESEq2################################

#Open RStudio on Thinlinc

library("tidyverse")

#Needed to download and then load DESEq2. DOwnloading not needed from next time onwards
library("BiocManager")
BiocManager::install("DESeq2")

library("DESeq2")

#Load your data
countdata <- read.table("/N/slate/primukh/RNASEq_Redo_Dec23/FLAG_Input/Results_FLAGRNASeq/Counts/FLAGRNASeq_counts.tsv", header = TRUE, row.names = 1)

#To view the excel sheet on Rstudio
View(countdata)

#To remove all other columns except the ones containing the read counts i.e. after column 6. 
countdata <- countdata[,6:ncol(countdata)]

#To display names of all columns present in your file
colnames(countdata)

#To remove additional parts of the column names
colnames(countdata) <- gsub("..Results_FLAGRNASeq.aligned.U373.","", colnames(countdata))

colnames(countdata) <- gsub("_S8_R1_001_Aligned.sortedByCoord.out.bam","", colnames(countdata))
colnames(countdata) <- gsub("_S1_R1_001_Aligned.sortedByCoord.out.bam","", colnames(countdata))
colnames(countdata) <- gsub("_S6_R1_001_Aligned.sortedByCoord.out.bam","", colnames(countdata))
colnames(countdata) <- gsub("_S9_R1_001_Aligned.sortedByCoord.out.bam","", colnames(countdata))
colnames(countdata) <- gsub("_S7_R1_001_Aligned.sortedByCoord.out.bam","", colnames(countdata))
colnames(countdata) <- gsub("_S5_R1_001_Aligned.sortedByCoord.out.bam","", colnames(countdata))
colnames(countdata) <- gsub("_S2_R1_001_Aligned.sortedByCoord.out.bam","", colnames(countdata))
colnames(countdata) <- gsub("_S4_R1_001_Aligned.sortedByCoord.out.bam","", colnames(countdata))
colnames(countdata) <- gsub("_S3_R1_001_Aligned.sortedByCoord.out.bam","", colnames(countdata))

colnames(countdata) <- gsub("Control.","", colnames(countdata))
colnames(countdata) <- gsub("WT.","", colnames(countdata))
colnames(countdata) <- gsub("R.Dom.","", colnames(countdata))
colnames(countdata) <- gsub("ADAR3.","", colnames(countdata))

countdata <- as.matrix(countdata)

countdata <- countdata[,c("412.Input.1","412.Input.3","412.Input.4","338.Input.1","338.Input.3","338.Input.4")]
(condition <- factor(c(rep("b",3), rep("a",3))))

(coldata <- data.frame(row.names = colnames(countdata), condition))

dds <- DESeqDataSetFromMatrix( countData = countdata, colData = coldata, design=~condition)

#Deletes rows with 0 in all columns
keep = rowSums(counts(dds)) >=1

dds <- dds[keep,]

dds <- DESeq(dds)

res <- results(dds)

resdata <- merge(as.data.frame(res), as.data.frame(counts(dds,normalized=TRUE)), by="row.names", sort=FALSE)

names(resdata)[1] <- "Gene"

write.csv(resdata, file= "/N/slate/primukh/RNASEq_Redo_Dec23/FLAG_Input/Results_FLAGRNASeq/FLAGRNASeq_01.02.24.csv")

scp primukh@quartz.uits.iu.edu:/N/slate/primukh/RNASEq_Redo_Dec23/FLAG_Input/Results_FLAGRNASeq/FLAGRNASeq_01.02.24.csv .


########################################DESEq2 for Control and WT by itself################################
countdata <- read.table("/N/slate/primukh/RNASEq_Redo_Dec23/FLAG_Input/Results_FLAGRNASeq/Counts/FLAGRNASeq_counts.tsv", header = TRUE, row.names = 1)
countdata <- countdata[,6:ncol(countdata)]

colnames(countdata) <- gsub("..Results_FLAGRNASeq.aligned.U373.","", colnames(countdata))
colnames(countdata) <- gsub("_S8_R1_001_Aligned.sortedByCoord.out.bam","", colnames(countdata))
colnames(countdata) <- gsub("_S1_R1_001_Aligned.sortedByCoord.out.bam","", colnames(countdata))
colnames(countdata) <- gsub("_S6_R1_001_Aligned.sortedByCoord.out.bam","", colnames(countdata))
colnames(countdata) <- gsub("_S9_R1_001_Aligned.sortedByCoord.out.bam","", colnames(countdata))
colnames(countdata) <- gsub("_S7_R1_001_Aligned.sortedByCoord.out.bam","", colnames(countdata))
colnames(countdata) <- gsub("_S5_R1_001_Aligned.sortedByCoord.out.bam","", colnames(countdata))
colnames(countdata) <- gsub("_S2_R1_001_Aligned.sortedByCoord.out.bam","", colnames(countdata))
colnames(countdata) <- gsub("_S4_R1_001_Aligned.sortedByCoord.out.bam","", colnames(countdata))
colnames(countdata) <- gsub("_S3_R1_001_Aligned.sortedByCoord.out.bam","", colnames(countdata))
colnames(countdata) <- gsub("Control.","", colnames(countdata))
colnames(countdata) <- gsub("WT.","", colnames(countdata))
colnames(countdata) <- gsub("R.Dom.","", colnames(countdata))
colnames(countdata) <- gsub("ADAR3.","", colnames(countdata))

countdata <- as.matrix(countdata)

countdata <- countdata[,c("338.Input.1","338.Input.3","338.Input.4")]
(condition <- factor(c(rep("b",3))))

(coldata <- data.frame(row.names = colnames(countdata), condition))

dds <- DESeqDataSetFromMatrix( countData = countdata, colData = coldata, design=~1) 

keep = rowSums(counts(dds)) >=1

dds <- dds[keep,]
dds <- DESeq(dds)
res <- results(dds)

resdata <- merge(as.data.frame(res), as.data.frame(counts(dds,normalized=TRUE)), by="row.names", sort=FALSE)
names(resdata)[1] <- "Gene"

write.csv(resdata, file= "/N/slate/primukh/RNASEq_Redo_Dec23/FLAG_Input/Results_FLAGRNASeq/U373_ControlOnly_RNASeq_01.02.24.csv")

#Clean entire dataset and redo for 412 and 413 
library("tidyverse")
library("DESeq2")
countdata <- read.table("/N/slate/primukh/RNASEq_Redo_Dec23/FLAG_Input/Results_FLAGRNASeq/Counts/FLAGRNASeq_counts.tsv", header = TRUE, row.names = 1)
countdata <- countdata[,6:ncol(countdata)]
colnames(countdata) <- gsub("..Results_FLAGRNASeq.aligned.U373.","", colnames(countdata))
colnames(countdata) <- gsub("_S8_R1_001_Aligned.sortedByCoord.out.bam","", colnames(countdata))
colnames(countdata) <- gsub("_S1_R1_001_Aligned.sortedByCoord.out.bam","", colnames(countdata))
colnames(countdata) <- gsub("_S6_R1_001_Aligned.sortedByCoord.out.bam","", colnames(countdata))
colnames(countdata) <- gsub("_S9_R1_001_Aligned.sortedByCoord.out.bam","", colnames(countdata))
colnames(countdata) <- gsub("_S7_R1_001_Aligned.sortedByCoord.out.bam","", colnames(countdata))
colnames(countdata) <- gsub("_S5_R1_001_Aligned.sortedByCoord.out.bam","", colnames(countdata))
colnames(countdata) <- gsub("_S2_R1_001_Aligned.sortedByCoord.out.bam","", colnames(countdata))
colnames(countdata) <- gsub("_S4_R1_001_Aligned.sortedByCoord.out.bam","", colnames(countdata))
colnames(countdata) <- gsub("_S3_R1_001_Aligned.sortedByCoord.out.bam","", colnames(countdata))
colnames(countdata) <- gsub("Control.","", colnames(countdata))
colnames(countdata) <- gsub("WT.","", colnames(countdata))
colnames(countdata) <- gsub("R.Dom.","", colnames(countdata))
colnames(countdata) <- gsub("ADAR3.","", colnames(countdata))
countdata <- as.matrix(countdata)
countdata <- countdata[,c("413.Input.1","413.Input.3","413.Input.4")]
(condition <- factor(c(rep("b",3))))
(coldata <- data.frame(row.names = colnames(countdata), condition))
dds <- DESeqDataSetFromMatrix( countData = countdata, colData = coldata, design=~1) 
keep = rowSums(counts(dds)) >=1
dds <- dds[keep,]
dds <- DESeq(dds)
res <- results(dds)
resdata <- merge(as.data.frame(res), as.data.frame(counts(dds,normalized=TRUE)), by="row.names", sort=FALSE)
names(resdata)[1] <- "Gene"

write.csv(resdata, file= "/N/slate/primukh/RNASEq_Redo_Dec23/FLAG_Input/Results_FLAGRNASeq/U373_ADAR3WTOnly_RNASeq_01.02.24.csv")
##OR##
write.csv(resdata, file= "/N/slate/primukh/RNASEq_Redo_Dec23/FLAG_Input/Results_FLAGRNASeq/U373_ADAR3rMutantOnly_RNASeq_01.02.24.csv")

scp primukh@quartz.uits.iu.edu:/N/slate/primukh/RNASEq_Redo_Dec23/FLAG_Input/Results_FLAGRNASeq/U373_ControlOnly_RNASeq_01.02.24.csv .
scp primukh@quartz.uits.iu.edu:/N/slate/primukh/RNASEq_Redo_Dec23/FLAG_Input/Results_FLAGRNASeq/U373_ADAR3WTOnly_RNASeq_01.02.24.csv .
scp primukh@quartz.uits.iu.edu:/N/slate/primukh/RNASEq_Redo_Dec23/FLAG_Input/Results_FLAGRNASeq/U373_ADAR3rMutantOnly_RNASeq_01.02.24.csv .

